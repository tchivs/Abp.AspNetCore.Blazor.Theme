@using System.Diagnostics.CodeAnalysis
@using Volo.Abp.Identity.Localization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components
@using Volo.Abp.Identity
@inject IStringLocalizer<IdentityResource> LH
@inherits BootstrapBlazorComponentBase
<div class="row g-3 form-inline">
    <div class="col-12">
        <BootstrapInput @bind-Value="@Context.UserName" placeholder="请输入用户名" DisplayText=@LH["UserName"] maxlength="50"> </BootstrapInput>
    </div>
    <div class="col-12">
        <BootstrapInput type="password" @bind-Value="@Context.Password" placeholder="不可为空，50字以内" DisplayText=@LH["Password"] maxlength="50"> </BootstrapInput>
    </div>
    <div class="col-12">
        <BootstrapInput type="email" @bind-Value="@Context.Email" placeholder="不可为空，50字以内" maxlength="50" DisplayText=@LH["EmailAddress"]> </BootstrapInput>
    </div>
    <div class="col-12">
        <BootstrapInput type="number" @bind-Value="@Context.PhoneNumber" placeholder="不可为空，50字以内" maxlength="11" DisplayText=@LH["PhoneNumber"]> </BootstrapInput>
    </div>
    <div class="col-12">
        <MultiSelect DisplayText=@LH["Roles"]
                     Items="@Roles" @bind-Value="@Context.RoleNames">
        </MultiSelect>
    </div>
    <div class="col-12">
        <Checkbox @bind-Value="@Context.LockoutEnabled"
                  ShowAfterLabel="true"
                  ShowLabel="false"
                  DisplayText=@L["LockoutEnabled"]>
        </Checkbox>
    </div>
</div>

@code{

    [Parameter]
    public Guid Id { get; set; }

    [Parameter,NotNull]
    public IdentityUserUpdateDto Context { get; set; }

    [Inject,NotNull]
    private IIdentityUserAppService? AppService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Roles = new List<SelectedItem>();
        var result = await this.AppService.GetAssignableRolesAsync();
        foreach (var item in result.Items)
        {
            Roles.Add(new SelectedItem(item.Name, item.Name));
        }
    }


    protected override async Task OnParametersSetAsync()
    {
        var roles = await AppService.GetRolesAsync(this.Id);
        this.Context.RoleNames = roles.Items.Select(x => x.Name).ToArray();
    }

    public List<SelectedItem> Roles { get; set; } = new List<SelectedItem>();

}