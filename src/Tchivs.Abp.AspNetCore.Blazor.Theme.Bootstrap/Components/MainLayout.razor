@using Tchivs.Abp.AspNetCore.Blazor.Theme.Components
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@using Tchivs.Abp.Shared.Localization
@using Volo.Abp.UI.Navigation
@using Volo.Abp.Ui.Branding
@using Volo.Abp.Users
@inherits LayoutComponentBase
@inject IOptions<AbpRouterOptions> _routerOptions
@inject IBrandingProvider _brandingProvider
@inject ICurrentUser _user
@inject IMenuManager _menuManager
@inject NavigationManager _navigation
@inject IStringLocalizer<BlazorUIResource> Localizer

    <CascadingValue Value="this" IsFixed="true">
        <Layout SideWidth="0"
                IsPage="true"
                ShowGotoTop="true"
                ShowCollapseBar="true"
                IsFullSide="@IsFullSide"
                IsFixedHeader="@IsFixedHeader"
                IsFixedFooter="@IsFixedFooter"
                ShowFooter="@ShowFooter"
                Menus="@Menus"
                UseTabSet="@UseTabSet"
                TabItemTextDictionary="@TabItemTextDictionary"
                AdditionalAssemblies="@_routerOptions.Value.AdditionalAssemblies"
                class="@Theme">
          
            <Header>
                <HeaderComponent DrawerSwitch="@(e => IsOpen = !IsOpen)"></HeaderComponent>
            </Header>
            <Side>
                <div class="layout-banner">
                    @if (!string.IsNullOrEmpty(_brandingProvider.LogoUrl))
                    {
                        <img class="layout-logo" src="@_brandingProvider.LogoUrl" />
                    }
                    <div class="layout-title">
                        <span>@_brandingProvider.AppName?.Split("|").FirstOrDefault()</span>
                    </div>
                </div>
                <div class="layout-user">
                    @*<img class="layout-avatar" src="_content/BootstrapBlazorApp.Shared/images/Argo-C.png">*@
                    <div class="layout-title">
                        <span>@_user.Name</span>
                    </div>
                    <div class="layout-user-state"></div>
                </div>
            </Side>
            <Main>
                <CascadingValue Value="this" IsFixed="true">
                    @Body
                </CascadingValue>
            </Main>
            <Footer>
                <div class="text-center flex-fill">
                    <a class="page-layout-demo-footer-link" href="https://gitee.com/LongbowEnterprise/BootstrapAdmin" target="_blank">@this._brandingProvider.AppName</a>
                </div>
            </Footer>
        </Layout>
        <Drawer Placement="Placement.Right" @bind-IsOpen="@IsOpen" IsBackdrop="true">
            <div class="layout-drawer-body">
                <div class="btn btn-info w-100" @onclick="@(e => IsOpen = false)">@Localizer["Close"]</div>
                <div class="page-layout-demo-option">
                    <p>布局调整</p>
                    <div class="row">
                        <div class="col-6">
                            <div class="layout-item @(IsFullSide ? "active d-flex" : "d-flex")" @onclick="@(e => IsFullSide = true)" data-toggle="tooltip" title="左右结构">
                                <div class="layout-left d-flex flex-column">
                                    <div class="layout-left-header"></div>
                                    <div class="layout-left-body flex-fill"></div>
                                </div>
                                <div class="layout-right d-flex flex-column flex-fill">
                                    <div class="layout-right-header"></div>
                                    <div class="layout-right-body flex-fill"></div>
                                    <div class="layout-right-footer"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="layout-item flex-column @(IsFullSide ? "d-flex" : "active d-flex")" @onclick="@(e => IsFullSide = false)" data-toggle="tooltip" title="上下结构">
                                <div class="layout-top">
                                </div>
                                <div class="layout-body d-flex flex-fill">
                                    <div class="layout-left">
                                    </div>
                                    <div class="layout-right flex-fill">
                                    </div>
                                </div>
                                <div class="layout-footer">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="page-layout-demo-option">
                    <p>固定调整</p>
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@IsFixedHeader" OnColor="@Color.Success" OffColor="@Color.Secondary"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>固定页头</span>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@IsFixedFooter" OnColor="@Color.Success" OffColor="@Color.Secondary"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>固定页脚</span>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@ShowFooter" OnColor="@Color.Success" OffColor="@Color.Primary"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>显示页脚</span>
                        </div>
                    </div>
                </div>
                <div class="page-layout-demo-option">
                    <p>主题配色</p>
                    <div class="row">
                        <div class="col-2">
                            <span class="color color1" @onclick="@(e => Theme = "color1")"></span>
                        </div>
                        <div class="col-2">
                            <span class="color color2" @onclick="@(e => Theme = "color2")"></span>
                        </div>
                        <div class="col-2">
                            <span class="color color3" @onclick="@(e => Theme = "color3")"></span>
                        </div>
                        <div class="col-2">
                            <span class="color color4" @onclick="@(e => Theme = "color4")"></span>
                        </div>
                        <div class="col-2">
                            <span class="color color5" @onclick="@(e => Theme = "color5")"></span>
                        </div>
                        <div class="col-2">
                            <span class="color color6" @onclick="@(e => Theme = "color6")"></span>
                        </div>
                    </div>
                </div>
                <div class="page-layout-demo-option">
                    <p>更多设置</p>
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <Switch @bind-Value="@UseTabSet" OnColor="@Color.Success" OffColor="@Color.Primary"></Switch>
                        </div>
                        <div class="col-6 text-right">
                            <span>@(UseTabSet ? "多标签" : "单页")</span>
                        </div>
                    </div>
                </div>
            </div>
        </Drawer>
    </CascadingValue>

@code {
    private bool UseTabSet { get; set; } = true;

    private string Theme { get; set; } = "";

    private bool IsOpen { get; set; }

    private bool IsFixedHeader { get; set; } = true;

    private bool IsFixedFooter { get; set; } = true;

    private bool IsFullSide { get; set; } = true;

    private bool ShowFooter { get; set; } = true;
    private Dictionary<string, string> TabItemTextDictionary { get; set; } = new();
    private List<MenuItem> Menus { get; set; } = new List<MenuItem>();

    /// <summary>
    /// OnInitialized 方法
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
         var mainMenu = await _menuManager.GetMainMenuAsync();
        Menus = GetIconSideMenuItems(mainMenu.Items);
    }
    private static List<MenuItem> GetIconSideMenuItems(ApplicationMenuItemList items)
    {
        var menus = new List<MenuItem>();
        foreach (var item in items)
        {
            var menu = new MenuItem()
                {
                    Text = item.DisplayName,
                    Icon = item.Icon,
                    Url = item.Url,
                };
            if (menu.Url == "/")
            {
                menu.Match = NavLinkMatch.All;
            }

            menus.Add(menu);
            menu.Items = GetIconSideMenuItems(item.Items);
        }
        return menus;
    }
}
