@namespace Tc.Abp.AspNetCore.Components
<RadzenDropDown class="mx-0 mx-lg-3" id="themes" style="width: 220px;" TValue="string" TextProperty="Text" ValueProperty="Value"
                Data="@Tc.Abp.AspNetCore.UI.ThemeService.Themes" Value="@ThemeService.CurrentTheme" Change="@ChangeTheme">
    <ValueTemplate>
        @context.Text Theme
    </ValueTemplate>
    <Template>
        <div style="display: flex; align-items: center; gap: 1rem;">
            <svg width="80" height="60" viewBox="0 0 80 60" fill="none" xmlns="http://www.w3.org/2000/svg" style="border-radius: 4px; oveflow: hidden; outline: var(--rz-input-border); min-width: 80px;">
                <rect width="80" height="60" fill="@context.Base" />
                <rect x="0" y="4" width="16" height="56" fill="@context.Sidebar" />
                <rect x="24" y="17" width="48" height="32" rx="2" fill="@context.Content" />
                <rect x="43" y="41" width="12" height="4" rx="1" fill="@context.Secondary" />
                <rect x="28" y="21" width="16" height="2" rx="1" fill="@context.TitleText" />
                <rect x="28" y="27" width="40" height="2" rx="1" fill="@context.ContentText" />
                <rect x="28" y="31" width="40" height="2" rx="1" fill="@context.ContentText" />
                <rect x="28" y="35" width="16" height="2" rx="1" fill="@context.ContentText" />
                <rect x="28" y="41" width="12" height="4" rx="1" fill="@context.Primary" />
                <rect width="80" height="6" fill="@context.Header" />
            </svg>
            @context.Text
            @if (context.Premium)
            {
                <RadzenBadge title="To use it in your application you need an active Radzen Professional or Enterprise subscription.">PRO</RadzenBadge>
            }
        </div>
    </Template>
</RadzenDropDown>

@code {
    [Inject] private ThemeService ThemeService { get; set; }
    [Inject]NavigationManager UriHelper { get; set; }

    protected override void OnInitialized()
    {
        ThemeService.Initialize(UriHelper);

        base.OnInitialized();
    }
    void ChangeTheme(object value)
    {
        var url = UriHelper.GetUriWithQueryParameter("theme", $"{value}");
        UriHelper.NavigateTo(url, true);
    }
}
