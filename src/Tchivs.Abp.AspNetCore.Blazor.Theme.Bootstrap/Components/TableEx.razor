@typeparam TAppService
@typeparam TItem
@typeparam TKey
@typeparam TGetListInput
@typeparam TCreateInput
@typeparam TUpdateInput
@inherits EasyTable<TAppService, TItem, TKey, TGetListInput, TCreateInput,TUpdateInput>
<Table @ref=table TItem=TItem
       PageItemsSource="@PageItemsSource"
       AutoGenerateColumns="@AutoGenerateColumns"
       IsPagination="true"
       IsStriped="true"
       IsBordered="true"
       IsMultipleSelect="true"
       ShowToolbar="true"
       ShowExtendButtons="true" ShowEditButton=false
       ShowSkeleton="true"
       ShowLoading="true"
       ShowSearch="true"
       ShowDefaultButtons="false"
       OnDeleteAsync=OnDeleteAsync
       OnSaveAsync=OnSaveAsync
       OnQueryAsync=OnQueryAsync>
    <TableColumns>
        @TableColumns?.Invoke(context)
    </TableColumns>
    <EditTemplate>
        @if (EditTemplate != null)
                {
        @EditTemplate?.Invoke(new AddOrUpdateContext<TKey, TItem, TCreateInput, TUpdateInput>(context))
        ;
                }
    </EditTemplate>
    <BeforeRowButtonTemplate>
        @if (HasUpdatePermission)
                {
        <Button Size="Size.ExtraSmall" OnClick="@ClickEditButtonCallback(context)" Icon="fa fa-edit" Text="@Localizer["Edit"]" />
                }
        @if (RowButtonTemplate != null)
                {
        @RowButtonTemplate.Invoke(context)
                }
    </BeforeRowButtonTemplate>
    <TableToolbarTemplate>
        @if (HasCreatePermission)
                {
        <TableToolbarButton TItem="TItem" Color="Color.Success" OnClick="@AddAsync" Icon="fa fa-plus" Text="@this.L["Add"]" />
                }
        @if (HasUpdatePermission)
                {
        <TableToolbarButton TItem="TItem" Color="Color.Primary" OnClick="@UpdateAsync" Icon="fa fa-pencil" Text="@Localizer["Edit"]" />
                }
        @if (HasDeletePermission)
                {
        <TableToolbarPopconfirmButton TItem="TItem" Color="Color.Danger"
                                      Icon="fa fa-remove" Text="@Localizer["Delete"]"
                                      OnBeforeClick="@ConfirmDelete" OnConfirm="@DeleteAsync"
                                      CloseButtonText="@Localizer["Cancel"]"
                                      Content="@L["ConfirmDeleteContent"]"
                                      ConfirmButtonText="@Localizer["Delete"]"
                                      ConfirmButtonColor="Color.Danger" />
                }
        @TableToolbarTemplate
    </TableToolbarTemplate>
</Table>